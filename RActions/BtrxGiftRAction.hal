external function LongInt GetCurUserLastNr(string);
external procedure NextM4Number(string,var string);
remote procedure OSDSumUp(var record OSDVc);
remote procedure NextM4SerialNumber(string,var string);//9:51 02.10.2018


SetLangMode(LangRussian,"RUS",0);



global
updating function LongInt BtrxInternalCatVcRecordCheck(var record BtrxInternalCatVc BICr,record BtrxInternalCatVc BIC2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxInternalCatVc oldBICr;
if(blank(BICr.Code))then begin
	oldBICr.Code = "INCAT9999";
	TrHs = true;
	while (LoopBackKey("Code",oldBICr,1,TrHs)) begin
			OldCode = oldBICr.Code;
			TrHs = false;
	end;
	ResetLoop(oldBICr);
	NextM4SerialNumber(OldCode,BICr.Code);
end;
return;
end;

global
updating function LongInt BtrxFirstLevelCatVcRecordCheck(var record BtrxFirstLevelCatVc FLCr,record BtrxFirstLevelCatVc FLC2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxFirstLevelCatVc oldFLCr;
if(blank(FLCr.Code))then begin
	oldFLCr.Code = "FILVL9999";
	TrHs = true;
	while (LoopBackKey("Code",oldFLCr,1,TrHs)) begin
			OldCode = oldFLCr.Code;
			TrHs = false;
	end;
	ResetLoop(oldFLCr);
	NextM4SerialNumber(OldCode,FLCr.Code);
end;
return;
end;

global
updating function LongInt BtrxSecondLevelCatVcRecordCheck(var record BtrxSecondLevelCatVc SLCr,record BtrxSecondLevelCatVc SLC2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxSecondLevelCatVc oldSLCr;
if(blank(SLCr.Code))then begin
	oldSLCr.Code = "SCLVL9999";
	TrHs = true;
	while (LoopBackKey("Code",oldSLCr,1,TrHs)) begin
			OldCode = oldSLCr.Code;
			TrHs = false;
	end;
	ResetLoop(oldSLCr);
	NextM4SerialNumber(OldCode,SLCr.Code);
end;
return;
end;

global
updating function LongInt BtrxThirdLevelCatVcRecordCheck(var record BtrxThirdLevelCatVc TLCr,record BtrxThirdLevelCatVc TLC2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxThirdLevelCatVc oldTLCr;
if(blank(TLCr.Code))then begin
	oldTLCr.Code = "THLVL9999";
	TrHs = true;
	while (LoopBackKey("Code",oldTLCr,1,TrHs)) begin
			OldCode = oldTLCr.Code;
			TrHs = false;
	end;
	ResetLoop(oldTLCr);
	NextM4SerialNumber(OldCode,TLCr.Code);
end;
return;
end;

global
updating function LongInt BtrxCertificateVcRecordCheck(var record BtrxCertificateVc BCr,record BtrxCertificateVc BC2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxCertificateVc oldBCr;
if(blank(BCr.Code))then begin
	oldBCr.Code = "CERTF9999";
	TrHs = true;
	while (LoopBackKey("Code",oldBCr,1,TrHs)) begin
			OldCode = oldBCr.Code;
			TrHs = false;
	end;
	ResetLoop(oldBCr);
	NextM4SerialNumber(OldCode,BCr.Code);
end;
return;
end;

global
updating function LongInt BtrxWatchMechanVcRecordCheck(var record BtrxWatchMechanVc WMr,record BtrxWatchMechanVc WM2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxWatchMechanVc oldWMr;
if(blank(WMr.Code))then begin
	oldWMr.Code = "WTMEC9999";
	TrHs = true;
	while (LoopBackKey("Code",oldWMr,1,TrHs)) begin
			OldCode = oldWMr.Code;
			TrHs = false;
	end;
	ResetLoop(oldWMr);
	NextM4SerialNumber(OldCode,WMr.Code);
end;
return;
end;

global
updating function LongInt BtrxPowerReserveVcRecordCheck(var record BtrxPowerReserveVc PRr,record BtrxPowerReserveVc PR2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxPowerReserveVc oldPRr;
if(blank(PRr.Code))then begin
	oldPRr.Code = "PWRES9999";
	TrHs = true;
	while (LoopBackKey("Code",oldPRr,1,TrHs)) begin
			OldCode = oldPRr.Code;
			TrHs = false;
	end;
	ResetLoop(oldPRr);
	NextM4SerialNumber(OldCode,PRr.Code);
end;
return;
end;

global
updating function LongInt BtrxWatchGradeVcRecordCheck(var record BtrxWatchGradeVc WGr,record BtrxWatchGradeVc WG2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxWatchGradeVc oldWGr;
if(blank(WGr.Code))then begin
	oldWGr.Code = "WTGRD9999";
	TrHs = true;
	while (LoopBackKey("Code",oldWGr,1,TrHs)) begin
			OldCode = oldWGr.Code;
			TrHs = false;
	end;
	ResetLoop(oldWGr);
	NextM4SerialNumber(OldCode,WGr.Code);
end;
return;
end;

global
updating function LongInt BtrxPhoneModelVcRecordCheck(var record BtrxPhoneModelVc PMr,record BtrxPhoneModelVc PM2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxPhoneModelVc oldPMr;
if(blank(PMr.Code))then begin
	oldPMr.Code = "PHMOD9999";
	TrHs = true;
	while (LoopBackKey("Code",oldPMr,1,TrHs)) begin
			OldCode = oldPMr.Code;
			TrHs = false;
	end;
	ResetLoop(oldPMr);
	NextM4SerialNumber(OldCode,PMr.Code);
end;
return;
end;

global
updating function LongInt BtrxFillingVcRecordCheck(var record BtrxFillingVc FLr,record BtrxFillingVc FL2r,LongInt stat,LongInt long4)
begin
string 255 OldCode;
boolean TrHs;
record BtrxFillingVc oldFLr;
if(blank(FLr.Code))then begin
	oldFLr.Code = "FILLN9999";
	TrHs = true;
	while (LoopBackKey("Code",oldFLr,1,TrHs)) begin
			OldCode = oldFLr.Code;
			TrHs = false;
	end;
	ResetLoop(oldFLr);
	NextM4SerialNumber(OldCode,FLr.Code);
end;
return;
end;