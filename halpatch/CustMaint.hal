//server-only
external function string 60 AddObjectToObjectList(string,string);
external procedure NextM4SerialNumber(string,var string);
external procedure ExtractObj(string,var Integer,var string);
//external procedure MyExtractObj(string,var Integer,var string);


global webpublic updating procedure WebChangeDownpaymentAcc()
begin
	record IVVc IVr,oldIVr;
	row IVVc IVrw;
	record TRVc  TRr,oldTRr;
	row TRVc TRrw;
	integer i,rwcnt,trrwcnt,j,dcnt;
	boolean storef,trsoref,TrHs;
	
	setcompany(28,false);
	
	//IVr.SerNr = 2100559;
	TrHs = true;
	while(loopmain(IVr,1,TrHs))begin
		if(IVr.SerNr!=2100559)then begin
			//TrHs = false;
		end;
		if(TrHs	)then begin
			recordcopy(oldIVr,IVr);
			storef = false;
			dcnt = 0;
		
			rwcnt = matrowcnt(IVr);
			for(i=0;i<rwcnt;i=i+1)begin
				matrowget(IVr,i,IVrw);
				if(IVrw.SalesAcc=="46")then begin
					dcnt = dcnt + 1;
				end;
				if(IVrw.stp==kInvoiceRowTypeDownpayment)then begin
					if(IVrw.SalesAcc=="46")then begin
						storef = true;
						IVrw.SalesAcc = "981";
						matrowput(IVr,i,IVrw);
					end;
				end;
			end;
			
			logtext(0,"WebChangeDownpaymentAcc storef " & storef);
			logtext(0,"WebChangeDownpaymentAcc dcnt " & dcnt);
		
			if(storef and dcnt>1)then begin
				
				TRr.Number = IVr.SerNr;
				TRr.IntYc = IVYc;
				if(readfirstmain(TRr,2,true))then begin
					trsoref = false;
					recordcopy(oldTRr,TRr);
					trrwcnt = matrowcnt(TRr);
					//storef = false;
				
					for(i=0;i<rwcnt;i=i+1)begin
						matrowget(oldIVr,i,IVrw);
						if(IVrw.stp==kInvoiceRowTypeDownpayment)then begin
							if(IVrw.SalesAcc=="46")then begin
								logtext(0,"IVrw.Sum " & IVrw.Sum);
								if(IVrw.Sum<0)then begin
									for(j=0;j<trrwcnt;j=j+1)begin
										matrowget(TRr,j,TRrw);
										if(TRrw.AccNumber=="46" and TRrw.CurDebVal==-IVrw.Sum)then begin
											TRrw.AccNumber = "981";
											TRrw.Comment = TRrw.Comment & "(46)";
											trsoref = true;
											matrowput(TRr,j,TRrw);
										end;
									end;
								end;
							end;
						end;
					end;

					if(trsoref)then begin
						if(recordupdate(oldTRr,TRr,true)==0)then begin
							storef = true;
						end;
					end;
				end;
			end;
		
			if(storef and dcnt==1)then begin
				TRr.Number = IVr.SerNr;
				TRr.IntYc = IVYc;
				if(readfirstmain(TRr,2,true))then begin
					//storef = false;
					trsoref = false;
					recordcopy(oldTRr,TRr);
					trrwcnt = matrowcnt(TRr);
					for(j=0;j<trrwcnt;j=j+1)begin
						matrowget(TRr,j,TRrw);
						if(TRrw.AccNumber=="46")then begin
							TRrw.AccNumber = "981";
							TRrw.Comment = TRrw.Comment & "(46)";
							trsoref = true;
							matrowput(TRr,j,TRrw);
						end;
					end;
					if(trsoref)then begin
						if(recordupdate(oldTRr,TRr,true)==0)then begin
							storef = true;
						end;
					end;
				end;
			end;
		
			if(storef and dcnt==1)then begin
				TRr.Number = IVr.SerNr;
				TRr.IntYc = IVYc;
				if(readfirstmain(TRr,2,true))then begin
					//storef = false;
					trsoref = false;
					recordcopy(oldTRr,TRr);
					trrwcnt = matrowcnt(TRr);
					for(j=0;j<trrwcnt;j=j+1)begin
						matrowget(TRr,j,TRrw);
						if(TRrw.AccNumber=="46")then begin
							TRrw.AccNumber = "981";
							trsoref = true;
							matrowput(TRr,j,TRrw);
						end;
					end;
					if(trsoref)then begin
						if(recordupdate(oldTRr,TRr,true)==0)then begin
							storef = true;
						end;
					end;
				end;
			end;
		
			if(storef)then begin
				recordstore(IVr,true);
			end;
		end;
	end;

return;
end;

global webpublic updating procedure WebFixIdeaObjects()
begin
	record IVVc IVr,oldIVr;
	row IVVc IVrw;
	record ORVc ORr;
	row ORVc ORrw;
	record SHVc SHr;
	row SHVc SHrw;
	record INVc INr;
	record ITVc ITr;
	string 255 obj;
	
	record TRVc  TRr,oldTRr;
	row TRVc TRrw;
	integer i,rwcnt,trrwcnt,j,dcnt;
	boolean storef,trsoref,TrHs;
	
	setcompany(28,false);
	
	IVr.SerNr = -1;
	TrHs = true;
	while(loopmain(IVr,1,TrHs))begin
		storef = false;
		rwcnt = matrowcnt(IVr);
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(IVr,i,IVrw);
			if(IVrw.stp==1)then begin
				if(blank(IVrw.Objects))then begin
					obj = "";
					INr.Code = IVrw.ArtCode;
					if(readfirstmain(INr,1,true))then begin
						obj = INr.Objects;
						ITr.Code = INr.Group;
						if(readfirstmain(ITr,1,true))then begin
							if(nonblank(ITr.Objects))then begin
								obj = AddObjectToObjectList(obj,ITr.Objects);
							end;
						end;
					end;
					if(nonblank(obj))then begin
						IVrw.Objects = obj;
						matrowput(IVr,i,IVrw);
						storef = true;
						obj = "";
					end;
				end;
			end;
		end;
		if(storef)then begin
			recordstore(IVr,true);
		end;
	end;
	
	ORr.SerNr = -1;
	TrHs = true;
	while(loopmain(ORr,1,TrHs))begin
		storef = false;
		rwcnt = matrowcnt(ORr);
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(ORr,i,ORrw);
			if(ORrw.stp==1)then begin
				if(blank(ORrw.Objects))then begin
					obj = "";
					INr.Code = ORrw.ArtCode;
					if(readfirstmain(INr,1,true))then begin
						obj = INr.Objects;
						ITr.Code = INr.Group;
						if(readfirstmain(ITr,1,true))then begin
							if(nonblank(ITr.Objects))then begin
								obj = AddObjectToObjectList(obj,ITr.Objects);
							end;
						end;
					end;
					if(nonblank(obj))then begin
						ORrw.Objects = obj;
						matrowput(ORr,i,ORrw);
						storef = true;
						obj = "";
					end;
				end;
			end;
		end;
		if(storef)then begin
			recordstore(ORr,true);
		end;
	end;
	
	SHr.SerNr = -1;
	TrHs = true;
	while(loopmain(SHr,1,TrHs))begin
		storef = false;
		rwcnt = matrowcnt(SHr);
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(SHr,i,SHrw);
			if(SHrw.stp==1)then begin
				if(blank(SHrw.Objects))then begin
					obj = "";
					INr.Code = SHrw.ArtCode;
					if(readfirstmain(INr,1,true))then begin
						obj = INr.Objects;
						ITr.Code = INr.Group;
						if(readfirstmain(ITr,1,true))then begin
							if(nonblank(ITr.Objects))then begin
								obj = AddObjectToObjectList(obj,ITr.Objects);
							end;
						end;
					end;
					if(nonblank(obj))then begin
						SHrw.Objects = obj;
						matrowput(SHr,i,SHrw);
						storef = true;
						obj = "";
					end;
				end;
			end;
		end;
		if(storef)then begin
			recordstore(SHr,true);
		end;
	end;

return;
end;



global webpublic updating procedure WebFixIdeaObjectsAccc()
begin
	record IVVc IVr,oldIVr;
	row IVVc IVrw;
	record ORVc ORr;
	row ORVc ORrw;
	record SHVc SHr;
	row SHVc SHrw;
	record INVc INr;
	record ITVc ITr;
	string 255 obj;
	record MainVc Mainr;
	record TRVc TRr,oldTRr;
	row TRVc TRrw;
	integer i,rwcnt,trrwcnt,j,dcnt;
	boolean storef,trsoref,TrHs;
	
	setcompany(28,false);
	
	Mainr.AccNumber = "45";
	Mainr.IntYc = SHYc;
	TrHs = true;
	while(loopkey("IntYc",Mainr,2,TrHs))begin
		if(Mainr.AccNumber!="45")then begin TrHs = false; end;
		if(Mainr.IntYc!=SHYc)then begin TrHs = false; end;
		
		if(TrHs)then begin
			
			TRr.Number = Mainr.TransNr;
			TRr.IntYc = Mainr.IntYc;
			if(readfirstmain(TRr,2,true))then begin
				storef = false;
				recordcopy(oldTRr,TRr);
				rwcnt = matrowcnt(TRr);
				for(i=0;i<rwcnt;i=i+1)begin
					matrowget(TRr,i,TRrw);
					if(TRrw.AccNumber=="45")then begin
						if(blank(TRrw.Objects))then begin
							logtext(0,"TransNr " & Mainr.TransNr);
							SHr.SerNr = TRr.Number;
							if(readfirstmain(SHr,1,true))then begin
								if(matrowcnt(SHr)>=(i+2)/2)then begin
									matrowget(SHr,((i+2)/2)-1,SHrw);
									if(nonblank(SHrw.Objects))then begin
										logtext(0,TRrw.AccNumber & " NewObkects " & SHrw.Objects);
										TRrw.Objects = SHrw.Objects;
										matrowput(TRr,i,TRrw);
										storef = true;
									end;
								end;
							end;
						end;
					end;
				end;
				
				if(storef)then begin
					recordupdate(oldTRr,TRr,true);
				end;
			end;
		end;
	
	end;
	

return;
end;


global webpublic updating procedure WebFixIdeaObjectsAccc46()
begin
	record IVVc IVr,oldIVr;
	row IVVc IVrw;
	record ORVc ORr;
	row ORVc ORrw;
	record SHVc SHr;
	row SHVc SHrw;
	record INVc INr;
	record ITVc ITr;
	string 255 obj;
	record MainVc Mainr;
	record TRVc TRr,oldTRr;
	row TRVc TRrw;
	integer i,rwcnt,trrwcnt,j,dcnt;
	boolean storef,trsoref,TrHs;
	
	setcompany(28,false);
	
	Mainr.AccNumber = "46";
	Mainr.IntYc = IVYc;
	TrHs = true;
	while(loopkey("IntYc",Mainr,2,TrHs))begin
		if(Mainr.AccNumber!="46")then begin TrHs = false; end;
		if(Mainr.IntYc!=IVYc)then begin TrHs = false; end;
		
		if(TrHs)then begin
			
			TRr.Number = Mainr.TransNr;
			TRr.IntYc = Mainr.IntYc;
			if(readfirstmain(TRr,2,true))then begin
				storef = false;
				recordcopy(oldTRr,TRr);
				rwcnt = matrowcnt(TRr);
				for(i=0;i<rwcnt;i=i+1)begin
					matrowget(TRr,i,TRrw);
					if(TRrw.AccNumber=="46")then begin
						if(blank(TRrw.Objects))then begin
							logtext(0,"TransNr " & Mainr.TransNr);
							IVr.SerNr = TRr.Number;
							if(readfirstmain(IVr,1,true))then begin
								recordcopy(oldIVr,IVr);
									IVr.OKFlag = 0;
								if(recordupdate(oldIVr,IVr,true)==0)then begin
									recordcopy(oldIVr,IVr)
									IVr.OKFlag = 1;
									recordupdate(oldIVr,IVr,true);
								end;
							end;							
						end;
					end;
				end;
			end;
		end;
	
	end;
	

return;
end;

global webpublic updating procedure WebFix3Level()
begin
	record BtrxThirdLevelCatVc BtrxThirdLevelCatr;
	
	while(loopmain(BtrxThirdLevelCatr,1,true))begin
	
		if(blank(BtrxThirdLevelCatr.PathScndCode))then begin
			recorddelete(BtrxThirdLevelCatr);
			stepback(BtrxThirdLevelCatr);
		end;
	end;


return;
end;

global 
webpublic updating procedure WebFillTreePathMn()
begin
	record GlobalItemVc GIr;
	record BtrxFirstLevelCatVc BtrxFirstLevelCatr;
	record BtrxSecondLevelCatVc BtrxSecondLevelCatr, BSLLastCoder;
	record BtrxThirdLevelCatVc BtrxThirdLevelCatr, BTLLastCoder,old3cetr;
	boolean testf, TrHs;
	string 255 catName, catNameRUS, catNameAZ, OldCode, sCatName, tCatName,tstr,new3cat;
	vector string 200 tlvelto2;
	integer pos;
	
	BtrxThirdLevelCatr.Name = "";
	while (loopkey("Name",BtrxThirdLevelCatr,1,testf)) begin
		tlvelto2[BtrxThirdLevelCatr.Name & ";;;" & BtrxThirdLevelCatr.PathScndCode] = BtrxThirdLevelCatr.Code;
	end;
	
	
	GIr.Code = "";
	while (LoopMain(GIr,1,true)) begin
		if(nonblank(GIr.BTRxFirstLevCat) and nonblank(GIr.BTRxSecondLevCat) and nonblank(GIr.BTRxThirdLevCat))then begin
			logtext(0,GIr.Code);
			
			pos = 0;
			new3cat = "";
			ExtractObj(GIr.BTRxThirdLevCat,pos,tstr);
			while(nonblank(tstr))begin
				if(nonblank(tstr) and left(tstr,5)=="THLVL")then begin
					BtrxThirdLevelCatr.Code = tstr;
					if(ReadFirstMain(BtrxThirdLevelCatr,1,true))then begin 
						if(BtrxThirdLevelCatr.PathScndCode!=GIr.BTRxSecondLevCat and left(BtrxThirdLevelCatr.Code,5)=="THLVL")then begin
							if(nonblank(tlvelto2[BtrxThirdLevelCatr.Name & ";;;" & GIr.BTRxSecondLevCat]))then begin
								tstr = tlvelto2[BtrxThirdLevelCatr.Name & ";;;" & GIr.BTRxSecondLevCat];
							end else begin
								BTLLastCoder.Code = "THLVL9999";
								if (readlastkey("Code",BTLLastCoder,1,false)) begin
									OldCode = BTLLastCoder.Code;
									recordcopy(BTLLastCoder,BtrxThirdLevelCatr);
									NextM4SerialNumber(OldCode,BTLLastCoder.Code);
									old3cetr.Code = BTLLastCoder.Code;
									if(readfirstmain(old3cetr,1,true)==false)then begin
										BTLLastCoder.PathScndCode = GIr.BTRxSecondLevCat;
										BtrxSecondLevelCatr.Code = GIr.BTRxSecondLevCat;
										if(readfirstmain(BtrxSecondLevelCatr,1,true))then begin
											BTLLastCoder.CatSecLvlName = BtrxSecondLevelCatr.Name;
										end;
										tlvelto2[BTLLastCoder.Name & ";;;" & BTLLastCoder.PathScndCode] = BTLLastCoder.Code;
										tstr = BTLLastCoder.Code;
										recordstore(BTLLastCoder,true);
									end;
								end;
							end;
						end;
					end;
				end;
				if(nonblank(new3cat))then begin
					new3cat = new3cat & "," & tstr;
				end else begin
					new3cat = tstr;
				end;
				ExtractObj(GIr.BTRxThirdLevCat,pos,tstr);
			end;
			if(nonblank(new3cat))then begin
				if(GIr.BTRxThirdLevCat!=new3cat)then begin
					GIr.BTRxThirdLevCat = new3cat;
					recordstore(GIr,true);
					new3cat = "";
				end;
			end;
			
		end;
	end;
return;
end;

procedure MyExtractObj(string ostr,var Integer pos,var string rstr)
BEGIN
  string 1 c1;
	integer i;
	
	rstr = "";
	if(pos<len(ostr))then begin
		for(i=pos;i<len(ostr);i=i+1)begin
			c1 = mid(ostr,i,1);
			if ((c1==",") or (c1==".") or (c1==";")) then begin
				pos = i+1;
				i = len(ostr);
			end else begin
				rstr = rstr & c1;
				pos = i+1;
			end;
		end;
	end;
	
  RETURN;
END;


global 
webpublic updating procedure WebFixGlobalWatchesMn()
begin
	record GlobalItemVc GIr;
	record BtrxFirstLevelCatVc BtrxFirstLevelCatr;
	record BtrxSecondLevelCatVc BtrxSecondLevelCatr, BSLLastCoder;
	record BtrxThirdLevelCatVc BtrxThirdLevelCatr, BTLLastCoder,old3cetr;
	boolean testf, TrHs;
	string 255 catName, catNameRUS, catNameAZ, OldCode, sCatName, tCatName,tstr,new3cat;
	string 1 c;
	vector string 200 tlvelto2,brand,lv1name,lv2name,lv3name;
	integer pos,i;
	boolean ch;
	record BPIBrandVc BPIBrandr;
	
	setcompany(1,false);
	
	
	while(loopmain(BtrxThirdLevelCatr,1,true))begin
		tlvelto2[BtrxThirdLevelCatr.Code] = BtrxThirdLevelCatr.PathScndCode;
		lv3name[BtrxThirdLevelCatr.Code] = BtrxThirdLevelCatr.Name;
	end;
	
	while(loopmain(BtrxSecondLevelCatr,1,true))begin
		lv2name[BtrxSecondLevelCatr.Code] = BtrxSecondLevelCatr.Name;
	end;
	
	while(loopmain(BtrxFirstLevelCatr,1,true))begin
		lv1name[BtrxFirstLevelCatr.Code] = BtrxFirstLevelCatr.Name;
	end;
	
	while(loopmain(BPIBrandr,1,true))begin
		brand[BPIBrandr.Code] = BPIBrandr.Name;
	end;
	
	while(loopmain(GIr,1,true))begin
		ch = false;
		
		/*if(nonblank(GIr.BTRxThirdLevCat))then begin
			tstr = "";
			for(i=0;i<len(GIr.BTRxThirdLevCat);i=i+1)begin
				c = mid(GIr.BTRxThirdLevCat,i,1);
				if(c=="_")then begin
					tstr = tstr & ",";
				end else begin
					tstr = tstr & c;
				end;
			end;
			
			if(tstr!=GIr.BTRxThirdLevCat)then begin
				logtext(0,GIr.Code & " " & GIr.BTRxThirdLevCat & " -> " & tstr);
			end;
		end;*/
		
		
		/*
		ch = false;
		tstr = "";
		pos = 0;
		new3cat = "";
		MyExtractObj(GIr.BTRxThirdLevCat,pos,tstr);
		while(nonblank(tstr))begin
			if(nonblank(tstr) and left(tstr,5)=="THLVL")then begin
				if(nonblank(tlvelto2[tstr]))then begin
					if(tlvelto2[tstr]!=GIr.BTRxSecondLevCat)then begin
						//logtext(0,"Error in 3 level wronglink" & GIr.Code);
						
						logtext(0,GIr.HansaCode & ";;;" & brand[GIr.BPIBrand] & ";;;" & GIr.Name & ";;;" & lv1name[GIr.BTRxFirstLevCat] & ";;;" & lv2name[GIr.BTRxSecondLevCat] & ";;;" & lv3name[GIr.BTRxThirdLevCat]);
					end;
				end else begin
					//logtext(0,"Error in 3 level levelnotexist" & GIr.Code);
					logtext(0,GIr.HansaCode & ";;;" & brand[GIr.BPIBrand] & ";;;" & GIr.Name & ";;;" & lv1name[GIr.BTRxFirstLevCat] & ";;;" & lv2name[GIr.BTRxSecondLevCat] & ";;;" & lv3name[GIr.BTRxThirdLevCat]);
				end;
			end;
			MyExtractObj(GIr.BTRxThirdLevCat,pos,tstr);
		end;
		*/
		
		/*if(GIr.BTRxFirstLevCat=="THLVL0109")then begin
			GIr.BTRxFirstLevCat = "THLVL0090";
			ch = true;
		end;
		if(GIr.BTRxFirstLevCat=="THLVL0083")then begin
			GIr.BTRxFirstLevCat = "THLVL0023";
			ch = true;
		end;
		if(GIr.BTRxSecondLevCat=="SCLVL0010")then begin
			GIr.BTRxSecondLevCat = "SCLVL0017";
			ch = true;
		end;*/
		/*if(GIr.BTRxFirstLevCat=="THLVL0031")then begin
			GIr.BTRxFirstLevCat = "THLVL0062";
			ch = true;
		end;*/
		
		/*if(GIr.BTRxFirstLevCat=="THLVL0096")then begin
			GIr.BTRxFirstLevCat = "THLVL0036";
			ch = true;
		end;
		
		if(ch)then begin
			logtext(0,GIr.Code);
			recordstore(GIr,true);
		end;*/
		if(GIr.BTRxFirstLevCat=="THLVL0095")then begin
			GIr.BTRxFirstLevCat = "THLVL0037";
			ch = true;
		end;
		
		if(ch)then begin
			logtext(0,GIr.Code);
			recordstore(GIr,true);
		end;
	end;
	
	
	/*while(loopmain(BtrxThirdLevelCatr,1,true))begin
		if(BtrxThirdLevelCatr.PathScndCode=="SCLVL0010")then begin
			BtrxThirdLevelCatr.PathScndCode = "SCLVL0017";
			logtext(0,"BtrxThirdLevelCatr " & BtrxThirdLevelCatr.Code);
			recordstore(BtrxThirdLevelCatr,true);
		end;
	end;*/
	
	return;
end;


global 
webpublic updating procedure WebDrawCategoryTree()
begin
	record GlobalItemVc GIr;
	record BtrxFirstLevelCatVc BtrxFirstLevelCatr;
	record BtrxSecondLevelCatVc BtrxSecondLevelCatr, BSLLastCoder;
	record BtrxThirdLevelCatVc BtrxThirdLevelCatr, BTLLastCoder,old3cetr;
	boolean testf, TrHs;
	string 255 catName, catNameRUS, catNameAZ, OldCode, sCatName, tCatName,tstr,new3cat;
	string 1 c;
	vector string 200 tlvelto2,brand,lv1name,lv2name,lv3name;
	integer pos,i;
	boolean ch;
	record BPIBrandVc BPIBrandr;
	
	setcompany(1,false);
	
	while(loopmain(BtrxFirstLevelCatr,1,true))begin
		lv1name[BtrxFirstLevelCatr.Code] = BtrxFirstLevelCatr.Name;
	end;
	resetloop(BtrxFirstLevelCatr);
	
	while(loopmain(BtrxSecondLevelCatr,1,true))begin
		lv2name[BtrxSecondLevelCatr.Code] = BtrxSecondLevelCatr.Name;
	end;
	resetloop(BtrxSecondLevelCatr);
	
	while(loopmain(BtrxThirdLevelCatr,1,true))begin
		lv3name[BtrxThirdLevelCatr.Code] = BtrxThirdLevelCatr.Name;
	end;
	resetloop(BtrxThirdLevelCatr);
	WebOutString("__");
	BtrxFirstLevelCatr.Code = "";
	while(loopmain(BtrxFirstLevelCatr,1,true))begin
		WebOutString(BtrxFirstLevelCatr.Name & "(" & BtrxFirstLevelCatr.Code & ")");
		weboutstring("<BR>");
		resetloop(BtrxSecondLevelCatr);
		BtrxSecondLevelCatr.Code = "";
		while(loopmain(BtrxSecondLevelCatr,1,true))begin
			if(BtrxSecondLevelCatr.PathFrstCode==BtrxFirstLevelCatr.Code)then begin
				WebOutString("---------------------------" & BtrxSecondLevelCatr.Name & "(" & BtrxSecondLevelCatr.Code & ")");
				weboutstring("<BR>");
				resetloop(BtrxThirdLevelCatr);
				BtrxThirdLevelCatr.Code = "";
				while(loopmain(BtrxThirdLevelCatr,1,true))begin
					if(BtrxThirdLevelCatr.PathScndCode==BtrxSecondLevelCatr.Code)then begin
						WebOutString("------------------------------------------------------" & BtrxThirdLevelCatr.Name & "(" & BtrxThirdLevelCatr.Code & ")");
						weboutstring("<BR>");
					end;
				end;
			end;
		end;
	end;
	
	
	
	return;
end;


