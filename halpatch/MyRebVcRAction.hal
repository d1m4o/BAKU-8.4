

global
updating function LongInt MyRebVcRecordCheck(var record MyRebVc MyRebr,record MyRebVc MyReb2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode;
  record MyRebVc locMyRebr;
  row MyRebVc MyRebrw; //Edit***************************Sasha2,13:36 23.12.2015
  Integer rwcnt,i; //Edit***************************Sasha2,13:36 23.12.2015
  record INVc INr; //Edit***************************Sasha2,13:37 23.12.2015
  Boolean foundf; //Edit***************************Sasha2,14:15 23.12.2015
  vector longint doublrow;
  record MarcCampVc MCr;

  logtext(0,"MyRebVcRecordCheck");
  
  res = 0;
  insertmode = 1;
  
  if(stat==Rs_Insert)then begin
  	if(MyRebr.Code=="0%")then begin
  		res = -1;
			RecordCheckError(36222,"",-1,"Code");      
			goto LMyRebVcRecordCheck;    
  	end;
  end;
    
  if blank(MyRebr.Comment) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"Comment");      
    goto LMyRebVcRecordCheck;     
  end; 
  
  if blank(MyRebr.Code) then begin
    res = -1;
    RecordCheckError(1959,"",-1,"Code");      
    goto LMyRebVcRecordCheck;     
  end;  
  if BlankDate(MyRebr.FromDate) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"FromDate");      
    goto LMyRebVcRecordCheck; 
  end;      
  if BlankDate(MyRebr.ToDate) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"ToDate");      
    goto LMyRebVcRecordCheck;     
  end;  
  /*if (stat==insertmode) then begin
     if (nonblankdate(MyRebr.FromDate) or nonblankdate(MyRebr.ToDate)) then begin
       if (blank(MyRebr.Replaces)) then begin
         RecordCheckError(1058,"",-1,"Replaces");      
         res = -1; 
         goto LMyRebVcRecordCheck;     
       end;
     end;
     locMyRebr.Replaces = MyRebr.Replaces;
     locMyRebr.FromDate = MyRebr.FromDate;
     if (ReadLastKey("Replaces",locMyRebr,2,false)) then begin
       if (locMyRebr.Replaces==MyRebr.Replaces) then begin
         if (nonblankdate(MyRebr.FromDate)) then begin
           if (locMyRebr.FromDate!=MyRebr.FromDate) then begin
             if (locMyRebr.ToDate!=MyRebr.ToDate) then begin
               if (DateInRange(MyRebr.FromDate,locMyRebr.FromDate,locMyRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"FromDate");      
                 res = -1; 
                 goto LMyRebVcRecordCheck;     
               end;  
             end;
           end;
           if (locMyRebr.FromDate==MyRebr.FromDate) then begin
             RecordCheckError(2030,"",-1,"FromDate");      
             res = -1; 
             goto LMyRebVcRecordCheck;     
           end;           
           if (locMyRebr.ToDate==MyRebr.ToDate) then begin
             RecordCheckError(2030,"",-1,"ToDate");      
             res = -1; 
             goto LMyRebVcRecordCheck;     
           end;           
         end;
       end;
     end;  
     locMyRebr.Replaces = MyRebr.Replaces;
     locMyRebr.ToDate = MyRebr.ToDate;
     if (ReadFirstKey("ToDate",locMyRebr,2,false)) then begin
       if (locMyRebr.Replaces==MyRebr.Replaces) then begin
         if (nonblankdate(MyRebr.FromDate)) then begin
           if (locMyRebr.FromDate!=MyRebr.FromDate) then begin
             if (locMyRebr.ToDate!=MyRebr.ToDate) then begin
               if (DateInRange(MyRebr.ToDate,locMyRebr.FromDate,locMyRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"ToDate");      
                 res = -1; 
                 goto LMyRebVcRecordCheck;     
               end;  
             end;
           end;
         end;
       end;  
     end;  
  end;*/  
  /*if (nonblank(MyRebr.Replaces)) then begin
    locMyRebr.Code = MyRebr.Replaces;
    if (ReadFirstMain(locMyRebr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"Replaces");      
      res = -1; 
      goto LMyRebVcRecordCheck;     
    end;
  end else begin
    if (nonblankdate(MyRebr.FromDate)) or (nonblankdate(MyRebr.ToDate)) then begin
      if (blank(MyRebr.Replaces)) then begin
        RecordCheckError(1058,"",-1,"Replaces");      
        res = -1; 
        goto LMyRebVcRecordCheck;     
      end;
    end;
  end;*/
  rwcnt = MatRowCnt(MyRebr); 
  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(MyRebr,i,MyRebrw);
    if (doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode]==-1) then begin
      doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode] = i;
    end else begin
      RecordCheckError(35112,": " & USetStr(15095) & " " & doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode]+1 & ", " & i+1,doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode],"ITCode");      
      res = -1; 
      goto LMyRebVcRecordCheck;   
    end;
    /*if (MyRebrw.CodeType==1 and NonBlank(MyRebrw.ITCode)) then begin
      INr.Code = MyRebrw.ITCode;
      if (ReadFirstMain(INr,1,true)==false) then begin
        foundf = false;
        INr.AlternativeCode = MyRebrw.ITCode;
        if (ReadFirstKey("AlternativeCode",INr,1,true)) then begin
          foundf = true;
        end else begin
          INr.BarCode = MyRebrw.ITCode;
          if (ReadFirstKey("BarCode",INr,1,true)) then begin
            foundf = true;
          end;
        end;
        if (foundf) then begin
          MyRebrw.ITCode = INr.Code;
          MatRowPut(MyRebr,i,MyRebrw);
        end;
      end;
    end;*/
  end; //Edit***************************Sasha2,14:09 23.12.2015 }
  // Edit Start ---------------------------------------------- Edit Start
	//Tuesday, 27 March 2018 14:58:51
	
  if(MyRebr.Code=="0%")then begin
  	if(nonblankdate(MyRebr.FromDate)) and (nonblankdate(MyRebr.ToDate))then begin
  		locMyRebr.Code = "";
  		while(loopmain(locMyRebr,1,true))begin
  			if(locMyRebr.Code!=MyRebr.Code and MyRebr.FromDate==locMyRebr.FromDate and MyRebr.ToDate==locMyRebr.ToDate)then begin
  				rwcnt = MatRowCnt(locMyRebr);
  				For(i=0;i<rwcnt;i=i+1) begin
	  				matrowdelete(locMyRebr,0);
					end; 
					rwcnt = MatRowCnt(MyRebr);
					For(i=0;i<rwcnt;i=i+1) begin
	  				MatRowGet(MyRebr,i,MyRebrw);
	  				MatRowPut(locMyRebr,i,MyRebrw);
					end; 
  				recordstore(locMyRebr,true);
  			end;
  		end;
  	end;
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
	MCr.Code = MyRebr.Code;
	MCr.sDate = MyRebr.FromDate;
	MCr.CompNr = CurrentCompany;
	ReadFirstMain(MCr,3,true);
	if(ReadRecordLink(Rebr,1,MCr,RLr)==false) then begin
		RecordNew(MCr);
		MCr.Code = Rebr.Code;
		MCr.sDate = Rebr.FromDate;
		MCr.vra0 = Rebr.vra0;
		MCr.CompNr = CurrentCompany;
		MCr.Comment = Rebr.Comment;
		MCr.Name = Rebr.Comment;
		MCr.eDate = Rebr.ToDate;
		if(!RecordStore(MCr,true)) then begin
			logtext(0,"Error Store");
		end else begin
			SednSyncReqMarcCampVcToCRM(MCr);
		end;
		CreateRecordLink(Rebr,CurrentCompany,MCr,CurrentCompany);
		CreateRecordLink(MCr,CurrentCompany,Rebr,CurrentCompany);
	
	end else begin
		MCr.Code = Rebr.Code;
		MCr.sDate = Rebr.FromDate;
		MCr.vra0 = Rebr.vra0;
		MCr.CompNr = CurrentCompany;
		MCr.Comment = Rebr.Comment;
		MCr.Name = Rebr.Comment;
		MCr.eDate = Rebr.ToDate;
	
		if(RecordStore(MCr,true)) then begin
			SednSyncReqMarcCampVcToCRM(MCr);
		end;	
	end;
	
LMyRebVcRecordCheck:;  
  MyRebVcRecordCheck = res;
  RETURN;
END;

global 
function Boolean MyRebVcRecordShouldBeSynchronised(record MyRebVc MyRebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  MyRebVcRecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean MyRebVcRecordSync(record MyRebVc MyRebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  MyRebVcRecordSync = res;
  return;
end;
