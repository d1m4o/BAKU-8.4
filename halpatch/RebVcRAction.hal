//server-only

SetLangMode(LangRussian,"RUS",0);

global
function LongInt RebVcRecordDefaults(var record RebVc Rebr,record RebVc Reb2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
      
  Rebr.vra0 = blankval;
  Rebr.vra1 = blankval;
  Rebr.vra2 = blankval;
  Rebr.vra3 = blankval;
  Rebr.vra4 = blankval;
  Rebr.vra5 = blankval;
  Rebr.vra6 = blankval;
  Rebr.vra7 = blankval;
  Rebr.vra8 = blankval;
  Rebr.vra9 = blankval;
  Rebr.DiscPerc = blankval;
//  Rebr.StartDate = blankdate;
//  Rebr.EndDate = blankdate;
//  Rebr.Replaces = "";
  RebVcRecordDefaults = res; 
  RETURN;
END;

global
updating function LongInt RebVcRecordCheck(var record RebVc Rebr,record RebVc Reb2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode;
  record RebVc locRebr;
  row RebVc Rebrw; //Edit***************************Sasha2,13:36 23.12.2015
  Integer rwcnt,i,cnt,j; //Edit***************************Sasha2,13:36 23.12.2015
  record INVc INr; //Edit***************************Sasha2,13:37 23.12.2015
  Boolean foundf; //Edit***************************Sasha2,14:15 23.12.2015
  vector LongInt doublrow;
  array string 255 MyRebRecord,MyToDate,MyFromDate;
  array val MyRebRecordVra;
  boolean testf;
  

  res = 0;
  insertmode = 1;
  if blank(Rebr.Code) then begin
    res = -1;
    RecordCheckError(1959,"",-1,"Code");      
    goto LRebVcRecordCheck;     
  end;  
  if (stat==insertmode) then begin
     if (nonblankdate(Rebr.FromDate) or nonblankdate(Rebr.ToDate)) then begin
       if (blank(Rebr.Replaces)) then begin
         RecordCheckError(1058,"",-1,"Replaces");      
         res = -1; 
         goto LRebVcRecordCheck;     
       end;
     end;
     locRebr.Replaces = Rebr.Replaces;
     locRebr.FromDate = Rebr.FromDate;
     if (ReadLastKey("Replaces",locRebr,2,false)) then begin
       if (locRebr.Replaces==Rebr.Replaces) then begin
         if (nonblankdate(Rebr.FromDate)) then begin
           if (locRebr.FromDate!=Rebr.FromDate) then begin
             if (locRebr.ToDate!=Rebr.ToDate) then begin
               if (DateInRange(Rebr.FromDate,locRebr.FromDate,locRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"FromDate");      
                 res = -1; 
                 goto LRebVcRecordCheck;     
               end;  
             end;
           end;
           if (locRebr.FromDate==Rebr.FromDate) then begin
             RecordCheckError(2030,"",-1,"FromDate");      
             res = -1; 
             goto LRebVcRecordCheck;     
           end;           
           if (locRebr.ToDate==Rebr.ToDate) then begin
             RecordCheckError(2030,"",-1,"ToDate");      
             res = -1; 
             goto LRebVcRecordCheck;     
           end;           
         end;
       end;
     end;  
     locRebr.Replaces = Rebr.Replaces;
     locRebr.ToDate = Rebr.ToDate;
     if (ReadFirstKey("ToDate",locRebr,2,false)) then begin
       if (locRebr.Replaces==Rebr.Replaces) then begin
         if (nonblankdate(Rebr.FromDate)) then begin
           if (locRebr.FromDate!=Rebr.FromDate) then begin
             if (locRebr.ToDate!=Rebr.ToDate) then begin
               if (DateInRange(Rebr.ToDate,locRebr.FromDate,locRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"ToDate");      
                 res = -1; 
                 goto LRebVcRecordCheck;     
               end;  
             end;
           end;
         end;
       end;  
     end;  
  end;  
  if (nonblank(Rebr.Replaces)) then begin
    locRebr.Code = Rebr.Replaces;
    if (ReadFirstMain(locRebr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"Replaces");      
      res = -1; 
      goto LRebVcRecordCheck;     
    end;
  end else begin
    if (nonblankdate(Rebr.FromDate)) or (nonblankdate(Rebr.ToDate)) then begin
      if (blank(Rebr.Replaces)) then begin
        RecordCheckError(1058,"",-1,"Replaces");      
        res = -1; 
        goto LRebVcRecordCheck;     
      end;
    end;
  end;
  rwcnt = MatRowCnt(Rebr); //Edit***************************Sasha2,14:09 23.12.2015 {
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Rebr,i,Rebrw);
    if (doublrow[Rebrw.CodeType & ":" & Rebrw.ITCode]==-1) then begin
      doublrow[Rebrw.CodeType & ":" & Rebrw.ITCode] = i;
    end else begin
      RecordCheckError(35112,": " & USetStr(15095) & " " & doublrow[Rebrw.CodeType & ":" & Rebrw.ITCode]+1 & ", " & i+1,doublrow[Rebrw.CodeType & ":" & Rebrw.ITCode],"ITCode");      
      res = -1; 
      goto LRebVcRecordCheck;   
    end;
    if (Rebrw.CodeType==1 and NonBlank(Rebrw.ITCode)) then begin
      INr.Code = Rebrw.ITCode;
      if (ReadFirstMain(INr,1,true)==false) then begin
        foundf = false;
        INr.AlternativeCode = Rebrw.ITCode;
        if (ReadFirstKey("AlternativeCode",INr,1,true)) then begin
          foundf = true;
        end else begin
          INr.BarCode = Rebrw.ITCode;
          if (ReadFirstKey("BarCode",INr,1,true)) then begin
            foundf = true;
          end;
        end;
        if (foundf) then begin
          Rebrw.ITCode = INr.Code;
          MatRowPut(Rebr,i,Rebrw);
        end;
      end;
    end;
  end; //Edit***************************Sasha2,14:09 23.12.2015 }
  // Edit Start ---------------------------------------------- Edit Start
	//Tuesday, 27 March 2018 14:58:51
  if(Rebr.Code=="0%")then begin
  	if(nonblankdate(Rebr.FromDate)) and (nonblankdate(Rebr.ToDate))then begin
  		locRebr.Code = "";
		cnt = 0;
  		while(loopmain(locRebr,1,true))begin
  			if(locRebr.Code!=Rebr.Code and Rebr.FromDate==locRebr.FromDate and Rebr.ToDate==locRebr.ToDate)then begin
  				rwcnt = MatRowCnt(locRebr);
  				For(i=0;i<rwcnt;i=i+1) begin
	  				matrowdelete(locRebr,0);
				end; 
				rwcnt = MatRowCnt(Rebr);
				For(i=0;i<rwcnt;i=i+1) begin
				MatRowGet(Rebr,i,Rebrw);
				MatRowPut(locRebr,i,Rebrw);
				end; 
  				recordstore(locRebr,true);
			end else begin
				if(locRebr.Code!=Rebr.Code)then begin
					MyRebRecord[cnt] = locRebr.Code;
					MyRebRecordVra[cnt] = locRebr.vra0;
					MyFromDate[cnt] = locRebr.FromDate;
					MyToDate[cnt] = locRebr.FromDate;
					cnt = cnt + 1;
					logtext(0,cnt);
				end;
  			end;
  		end;
		ResetLoop(locRebr);
		for(i=0;i<cnt;i=i+1)begin
			if((Rebr.FromDate<StringToDate(MyFromDate[i]) and StringToDate(MyFromDate[i])<Rebr.ToDate) or (Rebr.FromDate<StringToDate(MyToDate[i]) and StringToDate(MyToDate[i])<Rebr.ToDate))then begin
				MessageBox(35146,MyRebRecord[i] & " " & MyFromDate[i] & " - "& MyToDate[i] & ". Не будет создано");
			end else begin
				RecordNew(locRebr);
				locRebr.Code = MyRebRecord[i];
				locRebr.FromDate = Rebr.FromDate;
				locRebr.ToDate = Rebr.ToDate;
				locRebr.vra0 = MyRebRecordVra[i];
				locRebr.Replaces = MyRebRecord[i];
				rwcnt = MatRowCnt(Rebr);
				for(j=0;j<rwcnt;j=j+1) begin
					MatRowGet(Rebr,j,Rebrw);
					MatRowPut(locRebr,j,Rebrw);
				end; 
				recordstore(locRebr,true);
			end;
		end;
  	end;
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
LRebVcRecordCheck:;  
  RebVcRecordCheck = res;
  RETURN;
END;

global 
function Boolean RebVcRecordShouldBeSynchronised(record RebVc Rebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  RebVcRecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean RebVcRecordSync(record RebVc Rebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  RebVcRecordSync = res;
  return;
end;
